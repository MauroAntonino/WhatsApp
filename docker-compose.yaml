version: "3.7"

services:
  login:
    container_name: node-login
    restart: always
    volumes:
      - ./:/login_service/app
      - login:/login_service/app/node_modules/
    depends_on:
      - mysql
    build: ./login_service/app
    command: ["npm", "run", "start:dev"]
    # env_file: ./.env
    ports:
      - 3000:3000
    #   - $NODE_LOCAL_PORT:$NODE_DOCKER_PORT
    env_file: .env
    environment:
      MYSQL_HOST: ${MYSQL_HOST}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_DB: ${MYSQL_DB}
      CHAT_HOST: ${CHAT_HOST}

      CREATE_GROUP_URL: ${CREATE_GROUP_URL}
      WEBSOCKET_URL: ${WEBSOCKET_URL}
      CHAT_URL: ${CHAT_URL}
      AUTH_URL: ${AUTH_URL}
    networks:
      - backend
  
  chat:
    container_name: chat
    volumes:
      - chat:/server
    depends_on:
      - mysql
    build: ./server
    # env_file: ./.env
    ports:
      - 3030:3030
    networks:
      - backend
  
  repo:
    container_name: repo
    volumes:
      - repo:/repo_operations
    depends_on:
      - mysql
    build: ./repo_operations
    # env_file: ./.env
    ports:
      - 5000:5000
    env_file: .env
    environment:
      PYTHONUNBUFFERED: 1

      MYSQL_HOST: ${MYSQL_HOST}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_DB: ${MYSQL_DB}
    networks:
      - backend

  mysql:
    container_name: mysql
    image: mysql:5.7
    volumes:
      - todo-mysql-data:/var/lib/mysql
    env_file: .env
    environment: 
      MYSQL_ROOT_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_USER}
    networks:
      - backend      
networks:
  backend:

volumes:
  login:
  chat:
  todo-mysql-data:
  repo:
